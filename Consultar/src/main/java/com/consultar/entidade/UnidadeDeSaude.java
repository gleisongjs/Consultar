package com.consultar.entidade;
// Generated 31/03/2017 19:48:10 by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import javax.persistence.*;
import javax.validation.constraints.NotNull;
import java.util.List;

/**
 * UnidadeDeSaudeRepositorio generated by hbm2java
 */
@Entity
@Table(name="unidade_de_saude"
    ,catalog="consultar"
)
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "idunidadeDeSaude")

public class UnidadeDeSaude  implements java.io.Serializable {

    @Id
    @GeneratedValue(
            strategy = GenerationType.SEQUENCE,
            generator = "unidade_de_saude_id_seq")
    @SequenceGenerator(
            name = "unidade_de_saude_id_seq",
            sequenceName = "unidade_de_saude_id_seq",
            allocationSize = 1)//de quanto em quanto ele incrementa

    @Column(name ="id")


     private Long idunidadeDeSaude;
    @NotNull
    @Column(name = "nome")
     private String nome;
    @NotNull
    @Column(name = "horario")
     private String horario;
    @NotNull
    @Column(name = "status")
     private Integer status;


    @Column(name = "descricao")
    private String descricao;
    @NotNull
    @Column(name = "url")
    private String url;



    @ManyToMany
    @JoinTable(name = "unidade_saude_vacina",
            joinColumns=@JoinColumn(name = "unidade_de_saude_id"),
            inverseJoinColumns=@JoinColumn(name = "vacina_id"))
   // @JsonManagedReference(value = "unidade_saude_vacina")

    private List<Vacinas> vacinas;

    @ManyToMany
    @JoinTable(name = "unidade_saude_medicamento",
            joinColumns=@JoinColumn(name = "unidade_de_saude_id"),
            inverseJoinColumns=@JoinColumn(name = "medicamento_id"))
//    @JsonManagedReference(value = "unidade_saude_medicamento")


    private List<Medicamento> medicamento;



    @ManyToOne
    @JoinColumn(name = "unidade_saude_imagem")
    private Imagem imagem;


    @ManyToOne
    @JoinColumn(name = "unidade_saude_contato")
    private Contato contato;

    @ManyToOne
    @JoinColumn(name = "unidade_saude_localizacao")
    private Localizacao localizacao;

    @ManyToMany
    @JoinTable(name = "unidade_de_saude_exame",
            joinColumns=@JoinColumn(name = "unidade_de_saude_id"),
            inverseJoinColumns=@JoinColumn(name = "exame_id"))
  //  @JsonManagedReference(value = "unidade_de_saude_exame")
    private List<Exames> exames;


    @OneToMany(mappedBy = "unidadeDeSaude")
    private List<Leito> leito;

    @ManyToOne
    @JoinColumn(name = "usuario_id")
    private  Usuario usuario;

//    public UnidadeDeSaude(String nome, String horario, Integer status, String descricao, String url, List<Vacinas> vacinas, List<Medicamento> medicamento, Imagem imagem, Contato contato, Localizacao localizacao, List<Exames> exames, List<Leito> leito, Usuario usuario) {
//
//        this.nome = nome;
//        this.horario = horario;
//        this.status = status;
//        this.descricao = descricao;
//        this.url = url;
//        this.vacinas = vacinas;
//        this.medicamento = medicamento;
//        this.imagem = imagem;
//        this.contato = contato;
//        this.localizacao = localizacao;
//        this.exames = exames;
//        this.leito = leito;
//        this.setUsuario(usuario);
//    }



    public Long  getIdunidadeDeSaude() {
        return idunidadeDeSaude;
    }

    public void setIdunidadeDeSaude(Long idunidadeDeSaude) {
        this.idunidadeDeSaude = idunidadeDeSaude;
    }

    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public String getHorario() {
        return horario;
    }

    public void setHorario(String horario) {
        this.horario = horario;
    }

    public Integer getStatus() {
        return status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public String getDescricao() {
        return descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    public String getUrl() {
        return url;
    }

    public void setUrl(String url) {
        this.url = url;
    }

    public List<Vacinas> getVacinas() {
        return vacinas;
    }

    public void setVacinas(List<Vacinas> vacinas) {
        this.vacinas = vacinas;
    }

    public List<Medicamento> getMedicamento() {
        return medicamento;
    }

    public void setMedicamento(List<Medicamento> medicamento) {
        this.medicamento = medicamento;
    }

    public Imagem getImagem() {
        return imagem;
    }

    public void setImagem(Imagem imagem) {
        this.imagem = imagem;
    }

    public Contato getContato() {
        return contato;
    }

    public void setContato(Contato contato) {
        this.contato = contato;
    }

    public Localizacao getLocalizacao() {
        return localizacao;
    }

    public void setLocalizacao(Localizacao localizacao) {
        this.localizacao = localizacao;
    }

    public List<Exames> getExames() {
        return exames;
    }

    public void setExames(List<Exames> exames) {
        this.exames = exames;
    }

    public List<Leito> getLeitos() {
        return leito;
    }

    public void setLeitos(List<Leito> leitos) {
        this.leito = leitos;
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }
}


